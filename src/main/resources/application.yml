spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: root
    url: jdbc:mysql://127.0.0.1:3306/mydb
  jpa:
    # 输出 sql 语句
    show-sql: true


    # 和 generate-ddl 类似，但有 create,create-drop,update 等更多策略。
    hibernate:
      ddl-auto: create

    #    open-in-view: true

    # 数据表的生成策略。
    #
    # true - 若有表则检测更新，若无表则创建
    generate-ddl: true
  mail:
    username: 904084422@qq.com
    password: hwnzzcoiimrvbdfb
    host: smtp.qq.com
    port: 587
  redis:
    host: 127.0.0.1
    port: 6379
    # Redis数据库索引（默认为0）
    database: 0
    # 读取超时时间
    timeout: 30s
    # 连接超时时间
    connect-timeout: 30s
server:
  port: 2814
  address: 192.168.101.15

sa-token:
  # token名称 (同时也是cookie名称)，会自动从请求头根据 token-name key，获取 value
  token-name: token
  # token value 的前缀
  token-prefix: Bearer
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: -1
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  # 但是为了 jwt 的混入模式，避开 [顶人登录]，必须设置为 true。
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  # 但是为了 jwt 的混入模式，避开 [顶人登录]，必须设置为 true。
  is-share: true
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true
  # jwt 密钥
  jwt-secret-key: longjwtsecretkey1111


logging:
  file:
    name: ./logs/log.log
  # trace < debug < info（默认） < warn < error < fatal，低于设置日志级别的日志不会输出
  level:
    root: info
